-- CREACION DE LA BASE DE DATOS  Y LO BORRA SI ES QUE
-- EXISTE ESA BASE DE DATOS

DROP DATABASE IF EXISTS AUTOBATTLER;
CREATE DATABASE AUTOBATTLER;
USE AUTOBATTLER;


-- CREAR TABLAS EN LA DB

CREATE TABLE REGISTRO_DE_PARTIDA (
	ID_REG INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
   	 FECHA_HORA DATETIME,
   	 ID_SALA INT NOT NULL,
   	 ID_USER INT NOT NULL
    );
    
CREATE TABLE USUARIO (
	ID_USER INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(200) NOT NULL,
    APELLIDO VARCHAR(200) NOT NULL,
    FECHA_NACIMIENTO DATE NOT NULL,
    CORREO VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(50) NOT NULL,
    NICK VARCHAR(50) NOT NULL UNIQUE,
    NIVEL_USER INT,
    PUNTOS_CLASIF INT,
    CONECTADO BOOLEAN DEFAULT TRUE,
    );
    

CREATE TABLE CONFIGURACION (
	ID_CONFIG INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOMBRE_CONFIG VARCHAR(100) ,
    CONFIG_VIDEO ENUM ('BAJA', 'MEDIA', 'ALTA') DEFAULT 'MEDIA' ,
    CONFIG_SONIDO BOOLEAN DEFAULT TRUE,
    CONFIG_JUEGO ENUM ('KEYWOARD', 'GAMEPAD', 'TOUCH') DEFAULT 'KEYWOARD',
	ID_USER INT UNIQUE
    );
    
CREATE TABLE AMIGOS (
    ID_AMIGO INT NOT NULL PRIMARY KEY,
    ID_USER INT NOT NULL,
    NICK_AMIGO VARCHAR(50),
    AMIGO_CONECTADO BOOLEAN DEFAULT FALSE,
    UNIQUE(ID_USER, NICK_AMIGO)
);

CREATE TABLE PARTIDA (
	ID_SALA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TIEMPO_DE_PARTIDA TIME,
    ID_ESTADISTICA INT NOT NULL,
    ID_MODO INT NOT NULL,
    ID_MISION INT
    );
    
CREATE TABLE ESTADISTICAS (
	ID_ESTADISTICA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    POSICION INT(1) /*LAS POSICIONES SE DETERMINAN DEL 1RO AL 8VO */,
    NIVEL_ALCANZADO INT(1) /*LA PARTIDA PUEDE SUBIR HASTA MAX 9 NIVELES */,
    UNIDADES_COMPRADAS VARCHAR (255) /* EN UNA PARTIDA SE PUEDE COMPRAR HASTA 9 UNIDADES, SEGÚN NIVEL ALCANZADO, Y SE PUEDEN REPETIR */
    );

CREATE TABLE UNIDAD (
	ID_UNIDAD INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(50),
    COSTO ENUM ('1', '2', '3', '4') /* LOS COSTOS SON 1,2,3 Y 4 */,
    RASGO_SECUNDARIO VARCHAR(50),
    RASGO_PRINCIPAL VARCHAR(50),
    DANIO INT,
    DEFENSA INT,
    VIDA INT
    );
    
CREATE TABLE MODO_DE_JUEGO (
	ID_MODO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TIPO_MODO ENUM ('NORMAL', 'CLASIFICATORIA', 'PRACTICA VS IA'),
	GANA_NIVEL_EXP INT,
	GANA_PUNTOS_CLASIF INT
    );

CREATE TABLE MISIONES (
	ID_MISION INT PRIMARY KEY NOT NULL AUTO_INCREMENT, 
    TIPO_DE_MISION ENUM ('DIARIA', 'SEMANAL', 'MENSUAL'),
    TITULO VARCHAR(100),
    DESCRIPCION VARCHAR(500),
    RECOMPENSA VARCHAR(25) /*POR RAZONES PRÁCTICAS LA RECOMPENSA SE DEJA EN VARCHAR */
    );

CREATE TABLE PRODUCTO (
	ID_PRODUCTO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TIPO_PRODUCTO VARCHAR(50),
    VALOR DECIMAL(6,2)
    );
    
CREATE TABLE FACTURA (
	ID_TRANSACCION INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    FECHA_DE_COMPRA DATETIME,
	ID_PRODUCTO INT ,
    CANTIDAD_PRODUCTO INT,
    ID_USER INT,
    EMAIL VARCHAR(100),
    NICK VARCHAR (50),
    TOTAL_PAGAR DECIMAL(6,2),
    MEDIO_DE_PAGO VARCHAR(100),
    COMPLETADO BOOLEAN DEFAULT FALSE
    );

-- CREACIÓN DE LAS FOREING KEY

-- FK EN REGISTRO_DE_PARTIDA (REFERENCE:PARTIDA)
ALTER TABLE REGISTRO_DE_PARTIDA
	ADD CONSTRAINT FK_REG_ID_SALA
    FOREIGN KEY FK_REG_ID_SALA (ID_SALA) REFERENCES PARTIDA (ID_SALA) 
	ON DELETE CASCADE
	ON UPDATE CASCADE;

-- REFERENCE:PARTIDA)
ALTER TABLE REGISTRO_DE_PARTIDA
	ADD CONSTRAINT FK_REG_ID_USER
    FOREIGN KEY FK_REG_ID_USER (ID_USER) REFERENCES USUARIO (ID_USER)
	ON DELETE CASCADE
	ON UPDATE CASCADE;

-- FK EN PARTIDA (REFERENCE: MODO_DE_JUEGO)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_MODO
    FOREIGN KEY FK_PARTIDA_ID_MODO (ID_MODO) REFERENCES MODO_DE_JUEGO (ID_MODO)
	ON DELETE CASCADE
	ON UPDATE CASCADE;
    
-- (REFENRENCE: ESTADISTICAS)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_ESTADISTICA
    FOREIGN KEY FK_PARTIDA_ID_ESTADISTICA (ID_ESTADISTICA) REFERENCES ESTADISTICAS (ID_ESTADISTICA)
    ON DELETE CASCADE
	ON UPDATE CASCADE;
    
-- (REFERENCE: MISIONES)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_MISION
    FOREIGN KEY FK_PARTIDA_ID_MISION (ID_MISION) REFERENCES MISIONES (ID_MISION)
    ON DELETE CASCADE
	ON UPDATE CASCADE;
    
-- FK EN FACTURA (REFERENCE:PRODUCTO)
ALTER TABLE FACTURA
	ADD CONSTRAINT FK_FACT_ID_PRODUCTO
    FOREIGN KEY FK_FACT_ID_PRODUCTO (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO)
    ON DELETE CASCADE
	ON UPDATE CASCADE;

-- (REFERENCE: USUARIO)
ALTER TABLE FACTURA
	ADD CONSTRAINT FK_FACT_ID_USER
    FOREIGN KEY FK_FACT_ID_USER (ID_USER) REFERENCES USUARIO (ID_USER)
    ON DELETE CASCADE
	ON UPDATE CASCADE;

-- FK EN CONFIGURACION (REFERENCE: USUARIO)
ALTER TABLE CONFIGURACION
	ADD CONSTRAINT FK_ID_CONFIG_USER
    FOREIGN KEY FK_ID_CONFIG_USER (ID_USER) REFERENCES USUARIO (ID_USER)
    ON DELETE CASCADE
	ON UPDATE CASCADE;

-- FK EN AMIGOS (REFERENCE: USUARIO)
ALTER TABLE AMIGOS
	ADD CONSTRAINT FK_ID_AMIGO_USER
    FOREIGN KEY FK_ID_AMIGO_USER (ID_USER) REFERENCES USUARIO (ID_USER)
    ON DELETE CASCADE
	ON UPDATE CASCADE;
    
ALTER TABLE AMIGOS
	MODIFY COLUMN NICK_AMIGO VARCHAR(100);
